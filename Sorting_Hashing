# 2021_DA_in_CPP
2021년 자료구조 근본찾기 프로젝트

2021-1 데이터구조론 기말고사 시험범위 - Sorting

Bubble Sort

- i 번째와 i+1 번째를 비교하여, 순서가 틀어져 있다면 고친다.
- i 를 0 부터 n-2 까지 순회시킨다. 
- 위 과정이 한번 완료되면, 맨 뒤의 원소는 제 자리를 찾은 것이다.
- 따라서, n-1 번 정렬시키고 나면, 알아서 제 자리를 찾은 맨 앞의 원소 포함 총 n 개의 원소의 정렬이 완료된다.

Insertion Sort 

- 정렬을 실시하는데, k 번 정렬하였으면 앞의 k +1 개의 항목들은 이미 정렬이 되어있는 상태이다.
- k+1 번째 작업은, 앞의 정렬된 배열에 알맞은 자리를 찾아 해당 항목을 배치하고 다른 항목들을 앞뒤로 미는 과정이다.


Shell Sort

- 삽입 정렬의 개선 버전.

Quick Sort


Heap Sort



=======================================
추상적으로 우선 살펴보는 Hashing

배열에 index 를 사용하여 데이터가 저장되어 있다. ( 가령, n 살 사람의 버스요금 fee[n] )

이러한 테이블을 hash table 이라고 하며, 값을 불러오기만 하면 그것이 곧 함수의 실행과 같은 역할을 한다.



Bucket & slot

- Bucket 은 Hash Table 들의 index 부분을 가리킨다.
- Slot 은 각 Buck 의 Return 과 같다. 다만 한 버켓은 여러개의 슬롯을 지니고 있을 수 있다. (ex: a ~ z 까지 각 알파벳으로 시작하는 단어들)


Hash Function

: 마치 Random Variable 과 같이, 당장 사용할수는 없는 값 k 를 어떤 함수에 사용한다. 
ㄴ> 이때 k 를 key 라고 한다.

: 그러면 Hash Table 에서 어떻게든 가져올 수 있는 index (= bucket?) 을 얻는다. 
ㄴ> 이것을 key 에 대한 Hashing 의 결과물이라고 할 수 있겠다.

Mid-Square

1. Seed 를 제곱한다
2. 제곱한 수로부터, Seed 와 같은 자릿수의 중간 숫자들을 취한다.

Division (f = x%M)

- 나머지를 사용하여 Hash 를 구하는 방법이다. 0 ~ M-1 의 Hash 값을 얻을 수 있다.

Folding 

- 높은 자릿수의 십진수를, 3자리수씩 끊놓은 뒤 모두 덧셈한다.

Digit Analysis

- Seed 의 자릿수를 사용한다.



Overflow Handling

- 오버플로우는 C++ 에서 봤듯이 대충 중복되었다는 뜻이다.
- 서로 다른 키가, Function 의 연산 결과 Collision 이 일어나면, 즉 중복되면 이걸 오버플로우라고도 부르는 것이다.
- 이것은 필연적이다. 


Linear Probing : 중복되면 그냥 여러 Bucket 들 중 빈자리 찾아서 들어가는 거다.
ㄴ> 아마 앞자리부터 찾아서 들어가는듯





